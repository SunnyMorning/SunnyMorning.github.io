---
title: 4.8 KeyPad测试
date: 2018-04-10 15:47:43
tags: [AM335X, KeyPad]
categories: 
- 中文版
-	TI
-	AM335X
- MYD-AM335X-Linux-4.1.18开发手册
comments: true
---
&emsp;&emsp;本例程演示使用Linux User API读取按键信息，详情请参考源码。

**测试硬件环境：**
  * 硬件调试环境搭建见[部署开发环境](/zh-CN/myd-am335x/DevelopmentGuide/chapter2/chapter2)中的硬件调试环境搭建部分。
  * MYD-AM335x系列开发板一块

**测试软件环境：**
  * Linux Kernel 4.1.18
  * hexdump或keypad_test应用程序

**测试过程:**
&emsp;&emsp;将目录`<WORKDIR>/Examples/keypad`中的可执行程序keypad_test拷贝至开发板/usr/bin/目录下, 执行该程序进行测试如下：

```
$ chmod 777 /usr/bin/keypad_test
$ keypad_test -h
Usage: keypad_test [options]

Version 1.0
Options:
-d | --device name   keypad device name, default: /dev/input/event0
-h | --help          Print this message
```
&emsp;&emsp;查看MYD-AM335X按键设备对应的设备节点，可以发现K2,K3两个按键对应/dev/input/event1。

```
# ls /dev/input/
by-path/ event0   event1   mice     mouse0

# cat /sys/class/input/event0/device/name
ti-tsc

# cat /sys/class/input/event1/device/name
volume_keys@0
```
&emsp;&emsp;测试MYD-AM335X K2和K3。

```
# keypad_test -d /dev/input/event1
Event: Code = 115, Type = 1, Value=1                -- 按下K2
Event: Code = 0, Type = 0, Value=0
Event: Code = 115, Type = 1, Value=0                -- 释放K2
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=1                -- 按下K3
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=2
Event: Code = 0, Type = 0, Value=1
Event: Code = 114, Type = 1, Value=0                -- 释放K3
Event: Code = 0, Type = 0, Value=0
```
&emsp;&emsp;查看MYD-AM335X-Y按键设备对应的设备节点，可以发现K3,K4两个按键对应/dev/input/event3，K5对应/dev/input/event2。

```
# ls /dev/input/
by-path  event0   event1   event2   event3   mice     mouse0

# cat /sys/class/input/event0/device/name
beeper
# cat /sys/class/input/event1/device/name
ti-tsc
# cat /sys/class/input/event2/device/name
tps65217_pwrbutton
# cat /sys/class/input/event3/device/name
volume_keys@0
```
&emsp;&emsp;测试MYD-AM335X-Y K3和K4。

```
# keypad_test -d /dev/input/event3
Event: Code = 115, Type = 1, Value=1                -- 按下K3
Event: Code = 0, Type = 0, Value=0
Event: Code = 115, Type = 1, Value=0                -- 释放K3
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=1                -- 按下K4
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=0                -- 释放K4
Event: Code = 0, Type = 0, Value=0
```
&emsp;&emsp;测试MYD-AM335X-Y K5。
```
# keypad_test -d /dev/input/event2
Event: Code = 116, Type = 1, Value=1                -- 按下K5
Event: Code = 0, Type = 0, Value=0
Event: Code = 116, Type = 1, Value=0                -- 释放K5
Event: Code = 0, Type = 0, Value=0
```
&emsp;&emsp;查看MYD-AM335X-J按键设备对应的设备节点，可以发现K3,K4两个按键对应/dev/input/event3，K2对应/dev/input/event1。

```
# ls /dev/input/
by-path  event0   event1   event2   event3   mice     mouse0   mouse1

# cat /sys/class/input/event0/device/name
ti-tsc
# cat /sys/class/input/event1/device/name
tps65217_pwrbutton
# cat /sys/class/input/event2/device/name
ft5x06_ts
# cat /sys/class/input/event3/device/name
volume_keys@0
```
&emsp;&emsp;测试MYD-AM335X-J K3和K4。

```
# keypad_test -d /dev/input/event3
Event: Code = 115, Type = 1, Value=1            -- 按下K3
Event: Code = 0, Type = 0, Value=0
Event: Code = 115, Type = 1, Value=0            -- 释放K3
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=1            -- 按下K4
Event: Code = 0, Type = 0, Value=0
Event: Code = 114, Type = 1, Value=0            -- 释放K4
Event: Code = 0, Type = 0, Value=0
```
&emsp;&emsp;测试MYD-AM335X-J K2。

```
# keypad_test -d /dev/input/event1
Event: Code = 116, Type = 1, Value=1            -- 按下K2
Event: Code = 0, Type = 0, Value=0
Event: Code = 116, Type = 1, Value=0            -- 释放K2
Event: Code = 0, Type = 0, Value=0
```
&emsp;&emsp;以上测试结果中返回的Event Code即为按键键值，和内核设备树中定义的键值必须一致。
&emsp;&emsp;用户也可以通过Buildroot文件系统中自带的hexdump程序进行按键的测试，下面以MYD-AM335X为例，其它版型的KeyPad测试情况类似。分别按K2,K3这两个按键。 其中输出信息中第7列中的0073和0072即为设备树中定义的按键键值115和114，其它信息含义请参阅hexdump说明。

```
# hexdump /dev/input/event1
0000000 022b 0000 2a83 0005 0001 0073 0001 0000
0000010 022b 0000 2a83 0005 0000 0000 0000 0000
0000020 022b 0000 78b5 0007 0001 0073 0000 0000
0000030 022b 0000 78b5 0007 0000 0000 0000 0000

0000040 0231 0000 8c69 0001 0001 0072 0001 0000
0000050 0231 0000 8c69 0001 0000 0000 0000 0000
0000060 0231 0000 fc11 0003 0001 0072 0000 0000
0000070 0231 0000 fc11 0003 0000 0000 0000 0000
```





